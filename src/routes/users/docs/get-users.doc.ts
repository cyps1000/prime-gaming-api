/**
 * @api {GET} /users GET - Get Users List
 * @apiVersion 1.0.0
 * @apiName GetUsers
 * @apiSampleRequest off
 * @apiGroup Users
 * @apiDescription  Gets a list of users
 * @apiParam (Query Parameters) {Number} [page=1] Current page
 * @apiParam (Query Parameters) {Number} [limit=15] Users per page
 * @apiParam (Query Parameters) {String} [orderBy="createdAt"] Order by field
 * @apiParam (Query Parameters) {String} [orderDir="desc"] Order direction ( asc  | desc )
 * @apiParamExample  Example request 
    GET - /v1/users?page=1&limit=3&orderBy=email&orderDir=asc
 * @apiSuccessExample Example Response
    {
        "items": [
            {
                "suspended": false,
                "email": "eric.puskas@gmail.com",
                "firstName": "Eric T",
                "lastName": "Puskas T",
                "createdAt": "2021-06-02T19:29:36.093Z",
                "updatedAt": "2021-06-02T19:36:06.346Z",
                "id": "60a93323b4a9cb5d6c637b0d"
            },
            {
                "suspended": false,
                "email": "jane@doe.com",
                "firstName": "Jane",
                "lastName": "Doe",
                "createdAt": "2021-06-04T17:02:43.219Z",
                "updatedAt": "2021-06-04T17:02:43.219Z",
                "id": "60ba5cb3ec7062163434a26e"
            },
            {
                "suspended": false,
                "email": "jesus666@god.com",
                "firstName": "Jesus",
                "lastName": "Christ",
                "createdAt": "2021-06-04T17:08:42.929Z",
                "updatedAt": "2021-06-04T17:08:42.929Z",
                "id": "60ba5e1a793e584a80ebfb54"
            }
        ],
        "count": 3,
        "pages": 1,
        "page": 1,
        "limit": 3,
        "orderBy": "email",
        "orderDir": "asc"
    }
 * @apiSuccess {Object[]} items List of users.
 * @apiSuccess {Boolean} item[suspended] User suspended status
 * @apiSuccess {String} item[email] User's Email
 * @apiSuccess {String} item[firstName] User's first name
 * @apiSuccess {String} item[lastName] User's last name
 * @apiSuccess {String} item[createdAt] User created at time - auto-generated by Mongo
 * @apiSuccess {String} item[updatedAt] User updated at time - auto-generated by Mongo
 * @apiSuccess {String} item[id] User id
 * @apiSuccess {Number} total Total number of users
 * @apiSuccess {Number} pages Total number of pages
 * @apiSuccess {Number} page  Current page
 * @apiSuccess {Number} limit Users per page
 * @apiSuccess {String} orderBy Order users by field
 * @apiSuccess {String} orderDir Order users in desc or asc order
 * @apiError (Error 400) AuthorizationRequired  <code>The authorization header is required.</code>
 * @apiError (Error 401) NotAuthorized  <code>You are not authorized.</code>
 * @apiError (Error 401) RefreshTokenExpired <code>Refresh token has expired.</code>
 * @apiError (Error 401) AccessTokenExpired <code>Access token has expired.</code>
 * @apiErrorExample {json} Example Error Response:
    {
        "errors": [
            {
                "message": "The authorization header is required.",
                "errorType": "AuthorizationRequired",
                "statusCode": 400
            }
        ]
    }
 */
