/**
 * @api {DELETE} /users/:id DELETE - Delete User
 * @apiPermission Admin or User
 * @apiVersion 1.0.0
 * @apiName DeleteUser
 * @apiSampleRequest off
 * @apiGroup Users
 * @apiDescription  Deletes a user by id
 * @apiHeaderExample {json} Must include Authorization Header:
 *     {
 *       "Authorization": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYTk2N2Q4OGE1ZDJkNTIyYzBkMzExMSIsInJvbGUiOiJwcmltZS1hZG1pbiIsInRrSWQiOiI2MGI0YTA5NTdjMWE2ZjQzOGMxMTRjNjEiLCJyZWZyZXNoVG9rZW4iOiI2MGI0YTA5NTdjMWE2ZjQzOGMxMTRjNjIiLCJpYXQiOjE2MjI0NTAzMjUsImV4cCI6MTYyMjQ1MjEyNX0.HJ3eJsyIIFg3snqU_c0ZCtE6TLSZ8BH-_uk8fGQdvEI"
 *     }
 * @apiParam (Request parameters) {String} id User Unique ID.
 * @apiSuccessExample Example Response
    {
        "success": true,
        "user": {
            "suspended": false,
            "email": "jane@doe.com",
            "firstName": "Jane",
            "lastName": "Doe",
            "createdAt": "2021-06-04T17:00:00.708Z",
            "updatedAt": "2021-06-04T17:00:00.708Z",
            "id": "60ba5c103d810858c0b824d1"
        }
    }
 * @apiSuccess {Boolean} success Indicates that the user was deleted.
 * @apiSuccess {Boolean} user[suspended] User suspended status
 * @apiSuccess {String} user[email] User's Email
 * @apiSuccess {String} user[firstName] User's first name
 * @apiSuccess {String} user[lastName] User's last name
 * @apiSuccess {String} user[createdAt] User created at time - auto-generated by Mongo
 * @apiSuccess {String} user[updatedAt] User updated at time - auto-generated by Mongo
 * @apiSuccess {String} user[id] User id
 * @apiError (Error 400) InvalidObjectID <code>Please provide a valid object id.</code>
 * @apiError (Error 400) AuthorizationRequired  <code>The authorization header is required.</code>
 * @apiError (Error 400) NotSuspendedAccount <code> Unable to permanently delete your account. You account is not currently suspended. Please suspend your account and try again. </code>
 * @apiError (Error 401) NotAuthorized  <code>You are not authorized.</code>
 * @apiError (Error 401) RefreshTokenExpired <code>Refresh token has expired.</code>
 * @apiError (Error 401) AccessTokenExpired <code>Access token has expired.</code>
 * @apiError (Error 404) AccountNotFound <code>Account not found.</code>
 * @apiErrorExample {json} Example Error Response:
    {
        "errors": [
            {
                "message": "Unable to permanently delete your account. You account is not currently suspended. Please suspend your account and try again.",
                "errorType": "NotSuspendedAccount",
                "statusCode": 400
            }
        ]
    }
 */
