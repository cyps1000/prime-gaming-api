/**
 * @api {PUT} /users/:id/suspend PUT - Suspend User
 * @apiPermission Admin
 * @apiVersion 1.0.0
 * @apiName PutSuspendUser
 * @apiSampleRequest off
 * @apiGroup Users
 * @apiDescription Suspends a user
 * @apiParamExample  Example request 
    PUT - /v1/users/60b5d1d3bfcee136b4551f22/suspend
 * @apiSuccessExample Example Response
    {
        "success": true,
        "user": {
            "suspended": true,
            "email": "jesus666@god.com",
            "firstName": "Jesus",
            "lastName": "Christ",
            "createdAt": "2021-06-04T17:08:42.929Z",
            "updatedAt": "2021-06-04T17:08:42.929Z",
            "id": "60ba5e1a793e584a80ebfb54"
        }
    }
 * @apiSuccess {Boolean} success Indicates that the user was suspended.
 * @apiSuccess {Boolean} user[suspended] User suspended status
 * @apiSuccess {String} user[email] User's Email
 * @apiSuccess {String} user[firstName] User's first name
 * @apiSuccess {String} user[lastName] User's last name
 * @apiSuccess {String} user[createdAt] User created at time - auto-generated by Mongo
 * @apiSuccess {String} user[updatedAt] User updated at time - auto-generated by Mongo
 * @apiSuccess {String} user[id] User id
 * @apiError (Error 400) InvalidObjectID <code>Please provide a valid object id.</code>
 * @apiError (Error 400) AuthorizationRequired  <code>The authorization header is required.</code>
 * @apiError (Error 401) NotAuthorized  <code>You are not authorized.</code>
 * @apiError (Error 401) RefreshTokenExpired <code>Refresh token has expired.</code>
 * @apiError (Error 401) AccessTokenExpired <code>Access token has expired.</code>
 * @apiError (Error 404) AccountNotFound <code>Account not found.</code>
 * @apiErrorExample {json} Example Error Response:
    {
        "errors": [
            {
                "message": "Access token has expired.",
                "errorType": "AccessTokenExpired",
                "statusCode": 401
            }
        ]
    }
 */
