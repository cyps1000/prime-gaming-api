/**
 * @api {GET} /articles/:id GET - Get Article
 * @apiVersion 1.0.0
 * @apiName GetArticle
 * @apiSampleRequest off
 * @apiGroup Articles
 * @apiDescription  Gets an article by id
 * @apiParam (Request parameters) {String} id Article Unique ID.
 * @apiSuccessExample Example Response
    {
        "likes": [],
        "comments": [],
        "title": "Test Article",
        "content": "Test content",
        "author": "60a967d88a5d2d522c0d3111",
        "createdAt": "2021-05-31T16:07:24.385Z",
        "updatedAt": "2021-05-31T16:07:24.385Z",
        "id": "60b509bc74821822a08085f8"
    }
 * @apiSuccess {String[]} likes Article likes
 * @apiSuccess {String[]} comments Article comments
 * @apiSuccess {String} content Article content
 * @apiSuccess {String} author Article author (user id)
 * @apiSuccess {String} id Article id
 * @apiSuccess {String} createdAt Article created at time - auto-generated by Mongo
 * @apiSuccess {String} updatedAt Article updated at time - auto-generated by Mongo
 * @apiError (Error 400) InvalidObjectID <code>Please provide a valid object id.</code>
 * @apiError (Error 400) AuthorizationRequired  <code>The authorization header is required.</code>
 * @apiError (Error 401) NotAuthorized  <code>You are not authorized.</code>
 * @apiError (Error 401) RefreshTokenExpired <code>Refresh token has expired.</code>
 * @apiError (Error 401) AccessTokenExpired <code>Access token has expired.</code>
 * @apiError (Error 404) AccountNotFound <code>Account not found.</code>
 * @apiError (Error 404) ResourceNotFound <code>Resource not found.</code>
 * @apiErrorExample {json} Example Error Response:
    {
        "errors": [
            {
                "message": "Resource not found.",
                "errorType": "ResourceNotFound",
                "statusCode": 404
            }
        ]
    }
 */
